(()=>{"use strict";var r,e,t={203:(r,e,t)=>{var a,n,o,i=t(4749),s={ackley:function(r){for(var e=2*Math.PI,t=0,a=0,n=0;n<2;n++){var o=r[n];t+=o*o,a+=Math.cos(e*o)}return-20*Math.exp(-.2*Math.sqrt(.5*t))-Math.exp(.5*a)+20+Math.E},bohachevsky1:function(r){var e=r[0],t=r[1];return e*e+2*t*t+-.3*Math.cos(3*Math.PI*e)+-.4*Math.cos(4*Math.PI*t)+.7},griewank:function(r){for(var e=r.length,t=0,a=1,n=0;n<e;n++){var o=r[n];t+=o*o/4e3,a*=Math.cos(o/Math.sqrt(n+1))}return t-a+1},rastrigin:function(r){for(var e=r.length,t=0,a=0;a<e;a++){var n=r[a];t+=n*n-10*Math.cos(2*Math.PI*n)}return 10*e+t}};function c(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=r[t];return a}s.ackley.fancyName="Ackley",s.bohachevsky1.fancyName="Bohachevsky No.1",s.griewank.fancyName="Griewank",s.rastrigin.fancyName="Rastrigin",s.ackley.xyLim=32.768,s.bohachevsky1.xyLim=100,s.griewank.xyLim=600,s.rastrigin.xyLim=5.12;var l=function(){for(var r=2*Math.PI/32,e=[],t=0;t<2*Math.PI;t+=r)e.push(Float32Array.from([Math.sin(t),Math.cos(t)]));return e}();function u(){for(var r=new Float32Array(2*o.popsize),e=new Float32Array(o.popsize),t=[],i={},s=0,c=0,u=1/0,f=-1/0,h=0;h<o.popsize;h++){var p=o.ask(),v=n(p);s+=v,v<u&&(u=v),v>f&&(f=v),t.push({solution:p,score:v}),e[h]=v;for(var m=0;m<2;m++){var y=p[m],g=Math.abs(y);g>c&&(c=g),r[2*h+m]=y}}i.solutions=r.slice(),i.scores=e.slice(),i.meanScore=s/o.popsize,i.minScore=u,i.maxScore=f,i.ellipsePts=function(){for(var r=o.BD,e=o.mean,t=o.sigma,a=[],n=0;n<l.length;n++)for(var i=r.mulVec(l[n]),s=0;s<2;s++)a.push(e[s]+t*i[s]);return Float32Array.from(a)}().slice(),i.mean=o.mean.slice(),i.scaledSigma=o.sigma/a,i.maxAbsDim=c,postMessage(i),o.tell(t)}onmessage=function(r){var e,t,l=(e=r.data,t=2,function(r){if(Array.isArray(r))return r}(e)||function(r,e){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var a,n,o=[],i=!0,s=!1;try{for(t=t.call(r);!(i=(a=t.next()).done)&&(o.push(a.value),!e||o.length!==e);i=!0);}catch(r){s=!0,n=r}finally{try{i||null==t.return||t.return()}finally{if(s)throw n}}return o}}(e,t)||function(r,e){if(r){if("string"==typeof r)return c(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?c(r,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),f=l[0],h=l[1];"settings"===f?function(r){var e=r.objFnName,t=r.popsizeMultiplier,c=r.sigmaScale,l=r.meanRadius,f=r.meanDirection;!function(r){n=s[r],a=n.xyLim}(e);var h=c*a,p=null==f?2*Math.PI*Math.random():Math.PI*f,v=a*l,m=Float32Array.from([v*Math.cos(p),v*Math.sin(p)]),y=(0,i.S)(2)*t;o=new i.Y(m,h,y,void 0,void 0),u()}(h):"step"===f&&u()}}},a={};function n(r){var e=a[r];if(void 0!==e)return e.exports;var o=a[r]={exports:{}};return t[r](o,o.exports,n),o.exports}n.m=t,n.x=()=>{var r=n.O(void 0,[749],(()=>n(203)));return n.O(r)},r=[],n.O=(e,t,a,o)=>{if(!t){var i=1/0;for(u=0;u<r.length;u++){for(var[t,a,o]=r[u],s=!0,c=0;c<t.length;c++)(!1&o||i>=o)&&Object.keys(n.O).every((r=>n.O[r](t[c])))?t.splice(c--,1):(s=!1,o<i&&(i=o));if(s){r.splice(u--,1);var l=a();void 0!==l&&(e=l)}}return e}o=o||0;for(var u=r.length;u>0&&r[u-1][2]>o;u--)r[u]=r[u-1];r[u]=[t,a,o]},n.d=(r,e)=>{for(var t in e)n.o(e,t)&&!n.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:e[t]})},n.f={},n.e=r=>Promise.all(Object.keys(n.f).reduce(((e,t)=>(n.f[t](r,e),e)),[])),n.u=r=>r+".a23a62b262389138ab4b.js",n.miniCssF=r=>{},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),n.o=(r,e)=>Object.prototype.hasOwnProperty.call(r,e),(()=>{var r;n.g.importScripts&&(r=n.g.location+"");var e=n.g.document;if(!r&&e&&(e.currentScript&&(r=e.currentScript.src),!r)){var t=e.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=r})(),(()=>{var r={203:1};n.f.i=(e,t)=>{r[e]||importScripts(n.p+n.u(e))};var e=self.webpackChunktippy_project_website=self.webpackChunktippy_project_website||[],t=e.push.bind(e);e.push=e=>{var[a,o,i]=e;for(var s in o)n.o(o,s)&&(n.m[s]=o[s]);for(i&&i(n);a.length;)r[a.pop()]=1;t(e)}})(),e=n.x,n.x=()=>n.e(749).then(e),n.x()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,