(()=>{var e,r,t,o,n,i,a={},s={};function c(e){var r=s[e];if(void 0!==r)return r.exports;var t=s[e]={id:e,loaded:!1,exports:{}};return a[e](t,t.exports,c),t.loaded=!0,t.exports}c.m=a,e="function"==typeof Symbol?Symbol("webpack then"):"__webpack_then__",r="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",t="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",o=e=>{e&&(e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},n=e=>!--e.r&&e(),i=(e,r)=>e?e.push(r):n(r),c.a=(a,s,c)=>{var p,l,u,b=c&&[],d=a.exports,f=!0,y=!1,h=(r,t,o)=>{y||(y=!0,t.r+=r.length,r.map(((r,n)=>r[e](t,o))),y=!1)},m=new Promise(((e,r)=>{u=r,l=()=>(e(d),o(b),b=0)}));m[r]=d,m[e]=(e,r)=>{if(f)return n(e);p&&h(p,e,r),i(b,e),m.catch(r)},a.exports=m,s((a=>{var s;p=(a=>a.map((a=>{if(null!==a&&"object"==typeof a){if(a[e])return a;if(a.then){var s=[];a.then((e=>{c[r]=e,o(s),s=0}),(e=>{c[t]=e,o(s),s=0}));var c={};return c[e]=(e,r)=>(i(s,e),a.catch(r)),c}}var p={};return p[e]=e=>n(e),p[r]=a,p})))(a);var c=()=>p.map((e=>{if(e[t])throw e[t];return e[r]})),l=new Promise(((e,r)=>{(s=()=>e(c)).r=0,h(p,s,r)}));return s.r?l:c()}),(e=>(e&&u(m[t]=e),l()))),f=!1},c.d=(e,r)=>{for(var t in r)c.o(r,t)&&!c.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},c.f={},c.e=e=>Promise.all(Object.keys(c.f).reduce(((r,t)=>(c.f[t](e,r),r)),[])),c.u=e=>e+".0f42f01381d0880e44ae.js",c.miniCssF=e=>{},c.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),c.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),c.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),c.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.v=(e,r,t,o)=>{var n=fetch(c.p+""+t+".module.wasm");return"function"==typeof WebAssembly.instantiateStreaming?WebAssembly.instantiateStreaming(n,o).then((r=>Object.assign(e,r.instance.exports))):n.then((e=>e.arrayBuffer())).then((e=>WebAssembly.instantiate(e,o))).then((r=>Object.assign(e,r.instance.exports)))},(()=>{var e;c.g.importScripts&&(e=c.g.location+"");var r=c.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var t=r.getElementsByTagName("script");t.length&&(e=t[t.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),c.p=e})(),(()=>{var e={267:1};c.f.i=(r,t)=>{e[r]||importScripts(c.p+c.u(r))};var r=self.webpackChunktippy_project_website=self.webpackChunktippy_project_website||[],t=r.push.bind(r);r.push=r=>{var[o,n,i]=r;for(var a in n)c.o(n,a)&&(c.m[a]=n[a]);for(i&&i(c);o.length;)e[o.pop()]=1;t(r)}})(),c.e(234).then(c.bind(c,8234)).then((function(e){var r=new e.World({x:0,y:-9.81}),t=e.ColliderDesc.cuboid(10,.1);r.createCollider(t);var o=e.RigidBodyDesc.newDynamic().setTranslation(0,1),n=r.createRigidBody(o),i=e.ColliderDesc.cuboid(.5,.5),a=(r.createCollider(i,n.handle),0);!function e(){r.step();var t=n.translation();console.log("Rigid-body position: ",t.x,t.y),++a<20&&setTimeout(e,16)}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,